{
    "openapi": "3.0.1",
    "info": {
        "title": "ShipCompliant Connect",
        "description": "ShipCompliant REST API supporting eCommerce and Point of Sale workflows. <br /> * required fields.",
        "termsOfService": "https://www.sovos.com/shipcompliant/terms-and-conditions/",
        "contact": {
            "name": "Us",
            "email": "shipcompliantsupport@sovos.com"
        },
        "version": "v1"
    },
    "paths": {
        "/api/v1/addresses/validate": {
            "post": {
                "tags": [
                    "Addresses"
                ],
                "summary": "Validates the provided address",
                "description": "Sample request:\r\n            \r\n    POST /api/v1/addresses/validate\r\n    {\r\n        \"Address\": {\r\n            \"City\": \"Boulder\",\r\n            \"Company\": \"Sovos\",\r\n            \"Country\": \"US\",\r\n            \"County\": \"Boulder\",\r\n            \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n            \"Email\": \"example@sovos.com\",\r\n            \"Fax\": \"555-555-5555\",\r\n            \"FirstName\": \"Test First Name\",\r\n            \"LastName\": \"Test Last Name\",\r\n            \"Phone\": \"555-555-5555\",\r\n            \"State\": \"CO\",\r\n            \"Street1\": \"2465 Central Ave\",\r\n            \"Street2\": \"Ste 110\",\r\n            \"Zip1\": \"80301\",\r\n            \"Zip2\": \"5728\"\r\n         }\r\n    }",
                "requestBody": {
                    "description": "The request body with the address to be validated",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Addresses.Entities.AddressBase"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Addresses.Entities.AddressBase"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Addresses.Entities.AddressBase"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Addresses.Entities.AddressBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ValidateAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ValidateAddressBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/brands/{brandKey}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Retrieves brand information",
                "description": "Sample request:\r\n            \r\n    GET /api/v1/brands/BRAND123",
                "parameters": [
                    {
                        "name": "brandKey",
                        "in": "path",
                        "description": "The brand key",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The brand key",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetBrandSuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Updates an existing brand",
                "description": "Sample request:\r\n            \r\n    PUT /api/v1/brands/BRAND123\r\n    {\r\n      \"Key\": \"BRAND123\",\r\n      \"TTBBrandKey\": \"TTBBrandKey\",\r\n      \"Name\": \"Example Brand\",\r\n      \"Owner\": {\r\n        \"City\": \"Boulder\",\r\n        \"Country\": \"US\",\r\n        \"Name\": \"Example Owner\",\r\n        \"State\": \"CO\",\r\n        \"Street1\": \"2465 Central Ave\",\r\n        \"Street2\": \"Ste 110\",\r\n        \"Zip\": \"80301\"\r\n      },\r\n      \"ThisBrandIsBottledByAThirdParty\": true,\r\n      \"ThisBrandIsProducedByAThirdParty\": true,\r\n      \"ThisBrandOperatesUnderATradeName\": true,\r\n      \"ThisBrandWasAcquiredFromAThirdParty\": false\r\n    }",
                "parameters": [
                    {
                        "name": "brandKey",
                        "in": "path",
                        "description": "The brand key",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The brand key",
                            "nullable": false
                        }
                    }
                ],
                "requestBody": {
                    "description": "The new Brand data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.Brand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.Brand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.Brand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PutBrandResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/brands": {
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Adds a new brand",
                "description": "Sample request: \r\n            \r\n    POST /api/v1/brands\r\n    {\r\n        \"Key\": \"BRAND123\",\r\n        \"TTBBrandKey\": \"TTBBrandKey\",\r\n        \"Name\": \"Example Brand\",\r\n        \"Owner\": {\r\n            \"City\": \"Boulder\",\r\n            \"Country\": \"US\",\r\n            \"Name\": \"Example Owner\",\r\n            \"State\": \"CO\",\r\n            \"Street1\": \"2465 Central Ave\",\r\n            \"Street2\": \"Ste 110\",\r\n            \"Zip\": \"80301\"\r\n         },\r\n        \"ThisBrandIsBottledByAThirdParty\": true,\r\n        \"ThisBrandIsProducedByAThirdParty\": true,\r\n        \"ThisBrandOperatesUnderATradeName\": true,\r\n        \"ThisBrandWasAcquiredFromAThirdParty\": false\r\n    }",
                "requestBody": {
                    "description": "The new Brand",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.PostBrand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.PostBrand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.PostBrand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.PostBrand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostBrandResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/holdLocations/{carrier}": {
            "get": {
                "tags": [
                    "HoldLocations"
                ],
                "summary": "Gets hold locations for an address within a specified radius",
                "description": "Sample request:\r\n            \r\n\tGET /api/v1/holdLocations/FedEx?zipCode=80301&streetAddress=2465+Central+Ave&city=Boulder&stateOrProvince=CO&searchRadius=150&countryCode=US",
                "parameters": [
                    {
                        "name": "carrier",
                        "in": "path",
                        "description": "Either \"FedEx\" or \"UPS\"",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Either \"FedEx\" or \"UPS\"",
                            "nullable": false
                        }
                    },
                    {
                        "name": "zipCode",
                        "in": "query",
                        "description": "Required query parameter representing postal code",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Required query parameter representing postal code",
                            "nullable": false
                        }
                    },
                    {
                        "name": "streetAddress",
                        "in": "query",
                        "description": "Required param to add precision to the search",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Required param to add precision to the search",
                            "nullable": false
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Required param for city name",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Required param for city name",
                            "nullable": false
                        }
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "Required two digit country code",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Required two digit country code",
                            "nullable": false
                        }
                    },
                    {
                        "name": "stateOrProvince",
                        "in": "query",
                        "description": "Required two digit state code",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Required two digit state code",
                            "nullable": false
                        }
                    },
                    {
                        "name": "searchRadius",
                        "in": "query",
                        "description": "Optional parameter that indicates mile radius for search. Defaults to 10",
                        "schema": {
                            "title": "Int32",
                            "type": "integer",
                            "description": "Optional parameter that indicates mile radius for search. Defaults to 10",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetHoldLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/products/{productKey}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieves a specific Product by Product Key and Brand Key (optional)",
                "description": "Sample request:\r\n            \r\n    GET /api/v1/products/PROD123\r\n            \r\n If more than one brand contains the same product key:\r\n\r\n    GET /api/v1/products/PROD123?brandKey=BRAND123",
                "parameters": [
                    {
                        "name": "productKey",
                        "in": "path",
                        "description": "The product number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The product number",
                            "nullable": false
                        }
                    },
                    {
                        "name": "brandKey",
                        "in": "query",
                        "description": "The brand key",
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The brand key",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetProductSuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Voids a Product by Product Key and Brand Key (optional)",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/products/PROD123\r\n\r\nIf more than one brand contains the same product key:\r\n            \r\n    DELETE /api/v1/products/PROD123?brandKey=BRAND123",
                "parameters": [
                    {
                        "name": "productKey",
                        "in": "path",
                        "description": "The product number or sku",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The product number or sku",
                            "nullable": false
                        }
                    },
                    {
                        "name": "brandKey",
                        "in": "query",
                        "description": "The brand key",
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The brand key",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Updates an existing product",
                "description": " Sample request:\r\n\r\n     PUT /api/v1/products/PROD123\r\n     {\r\n\t\t\t\"Age\": 2010,\r\n\t    \t\"BottleSizeML\": 700,\r\n\t    \t\"BrandKey\": \"BRAND123\",\r\n\t    \t\"DefaultCase\": \"12\",\r\n\t    \t\"DefaultRetailUnitPrice\": 10.00,\r\n\t    \t\"DefaultWholesaleCasePrice\": 100.00,\r\n\t    \t\"Description\": \"Example Product\",\r\n\t    \t\"Flavor\": \"Merlot\",\r\n\t    \t\"Style\": \"Merlot\",\r\n\t    \t\"GTIN\": \"012345678905\",\r\n\t    \t\"Label\": \"Example Label\",\r\n\t    \t\"NABCA\": \"01234567891\",\r\n\t    \t\"PercentAlcohol\": 6.8,\r\n\t    \t\"ProductDistribution\": \"Both\",\r\n\t    \t\"ProductType\": \"Wine\",\r\n\t    \t\"SCC\": \"10012345678902\",\r\n\t    \t\"UNIMERC\": \"012345\",\r\n\t    \t\"UnitPrice\": 10.00,\r\n\t    \t\"UPC\": \"012345678905\",\r\n\t    \t\"Varietal\": \"Merlot\",\r\n\t    \t\"Vintage\": 2010,\r\n\t    \t\"VolumeAmount\": 700.00,\r\n\t    \t\"VolumeUnit\": \"Milliliter\",\r\n\t    \t\"SubBrand\": \"Example Sub Brand\",\r\n\t    \t\"ContainerType\": \"Bottle\",\r\n\t    \t\"ContainersPerSellingUnit\": 1,\r\n\t    \t\"ShippingWeightInLbs\": 1.2\r\n     }",
                "parameters": [
                    {
                        "name": "productKey",
                        "in": "path",
                        "description": "The Product key",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The Product key",
                            "nullable": false
                        }
                    },
                    {
                        "name": "brandKey",
                        "in": "query",
                        "description": "The Brand Key (optional)",
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The Brand Key (optional)",
                            "nullable": true
                        }
                    }
                ],
                "requestBody": {
                    "description": "The new Product data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ProductInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ProductInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ProductInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ProductInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PutProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/products": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Adds a new product",
                "description": "Sample request:\r\n            \r\n    POST /api/v1/products\r\n    {\r\n        \"Age\": 2010,\r\n        \"BottleSizeML\": 700,\r\n        \"BrandKey\": \"BRAND123\",\r\n        \"DefaultCase\": \"12\",\r\n        \"DefaultRetailUnitPrice\": 10.00,\r\n        \"DefaultWholesaleCasePrice\": 100.00,\r\n        \"Description\": \"Example Product\",\r\n        \"Flavor\": \"Merlot\",\r\n        \"Style\": \"Merlot\",\r\n        \"GTIN\": \"012345678905\",\r\n        \"Label\": \"Example Label\",\r\n        \"NABCA\": \"01234567891\",\r\n        \"PercentAlcohol\": 6.8,\r\n        \"ProductDistribution\": \"Both\",\r\n        \"ProductKey\": \"EP\",\r\n        \"ProductType\": \"Wine\",\r\n        \"SCC\": \"10012345678902\",\r\n        \"UNIMERC\": \"012345\",\r\n        \"UnitPrice\": 10.00,\r\n        \"UPC\": \"012345678905\",\r\n        \"Varietal\": \"Merlot\",\r\n        \"Vintage\": 2010,\r\n        \"VolumeAmount\": 700.00,\r\n        \"VolumeUnit\": \"Milliliter\",\r\n        \"SubBrand\": \"Example Sub Brand\",\r\n        \"ContainerType\": \"Bottle\",\r\n        \"ContainersPerSellingUnit\": 1,\r\n        \"ShippingWeightInLbs\": 1.2\r\n    }",
                "requestBody": {
                    "description": "The new Product",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.PostProductInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.PostProductInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.PostProductInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.PostProductInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/products/kits": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Adds a new Kit",
                "description": "Sample request:\r\n            \r\n    POST /api/v1/products/kits\r\n    {\r\n        \"type\": \"Prebuilt\",\r\n        \"brandKey\": \"BRAND123\",\r\n        \"productKey\": \"KIT123\",\r\n        \"description\": \"Example Kit\",\r\n        \"totalWeight\": 10.95,\r\n        \"components\": [\r\n          {\r\n            \"productKey\": \"PROD123\",\r\n            \"brandKey\": \"BRAND123\",\r\n            \"quantity\": 2\r\n          }\r\n        ],\r\n        \"distributionType\": \"Direct\"\r\n    }",
                "requestBody": {
                    "description": "The new Kit data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.KitInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.KitInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.KitInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.KitInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/products/combos": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Adds a new Combo",
                "description": "Sample request:\r\n            \r\n    POST /api/v1/products/combos\r\n    {\r\n        \"brandKey\": \"BRAND123\",\r\n        \"productComboKey\": \"COMBO123\",\r\n        \"description\": \"Example Combo\",\r\n        \"itemsPerCase\": 2,\r\n        \"wholesaleCasePrice\": 10.50,\r\n        \"totalWeight\": 20.00,\r\n        \"nabca\": \"string\",\r\n        \"scc\": \"string\",\r\n        \"unimerc\": \"string\",\r\n        \"upc\": \"string\",\r\n        \"gtin\": \"string\",\r\n        \"components\": [\r\n        {\r\n            \"productKey\": \"PROD123\",\r\n            \"brandKey\": \"BRAND123\",\r\n            \"quantity\": 3,\r\n        }\r\n        ],\r\n        \"distributionType\": \"Direct\"\r\n   }",
                "requestBody": {
                    "description": "The new Combo data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ComboInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ComboInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ComboInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ComboInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostProductResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}": {
            "get": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Retrieves the specified sales order",
                "description": "Sample request:\r\n            \r\n    GET /api/v1/salesOrders/ORDER123",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetSalesOrderSuccessResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Voids a sales order",
                "description": "Sample request:\r\n            \r\n    DELETE /api/v1/salesOrders/ORDER123",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteSalesOrderResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Saves a sales order to the system without checking compliance or tax due.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders\r\n\t{\r\n\t  \"SalesOrder\": {\r\n\t    \"BillTo\": {\r\n\t      \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t      \"City\": \"Boulder\",\r\n\t      \"Company\": \"Sovos\",\r\n\t      \"Country\": \"US\",\r\n\t      \"County\": \"Boulder\",\r\n\t      \"Email\": \"example@sovos.com\",\r\n\t      \"Fax\": \"555-555-5555\",\r\n\t      \"FirstName\": \"Test First Name\",\r\n\t      \"LastName\": \"Test Last Name\",\r\n\t      \"Phone\": \"555-555-5555\",\r\n\t      \"State\": \"CO\",\r\n\t      \"Street1\": \"2465 Central Ave\",\r\n\t      \"Street2\": \"Ste 110\",\r\n\t      \"Zip1\": \"80301\",\r\n\t      \"Zip2\": \"5728\"\r\n\t    },\r\n\t    \"CustomerKey\": \"Custom123\",\r\n\t    \"Discounts\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"Code\": \"string\",\r\n\t        \"Type\": \"string\"\r\n\t      }\r\n\t    ],\r\n\t    \"FulfillmentType\": \"Daily\",\r\n\t    \"OrderType\": \"Internet\",\r\n\t    \"Payments\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"SubType\": \"VISA\",\r\n\t        \"TransactionID\": \"string\",\r\n\t        \"Type\": \"CreditCard\"\r\n\t      }\r\n\t    ],\r\n\t    \"PurchaseDate\": \"2020-11-01T00:00:00Z\",\r\n\t    \"SalesOrderKey\": \"Order123\",\r\n\t    \"SalesTaxCollected\": 0.00,\r\n\t    \"Shipments\": [\r\n\t      {\r\n\t        \"Discounts\": [\r\n\t          {\r\n\t            \"Amount\": 0.00,\r\n\t            \"Code\": \"string\",\r\n\t            \"Type\": \"string\"\r\n\t          }\r\n\t        ],\r\n\t        \"FulfillmentAccount\": \"Account123\",\r\n\t        \"FulfillmentHouse\": \"WineShipping\",\r\n\t        \"FulfillmentExceptionReason\": \"Test Exception Reason\",\r\n\t        \"FulfillmentExceptionType\": \"Test Exception Type\",\r\n\t        \"GiftNote\": \"Happy Birthday\",\r\n\t        \"Handling\": 0.00,\r\n\t        \"LicenseRelationship\": \"SupplierToConsumer\",\r\n\t        \"Packages\": [\r\n\t          {\r\n\t            \"TrackingNumber\": \"ABC123456789\"\r\n\t          }\r\n\t        ],\r\n\t        \"ShipDate\": \"2020-11-01T00:00:00Z\",\r\n\t        \"ShipmentItems\": [{\r\n\t          \"BrandKey\": \"Brand123\",\r\n\t          \"Discounts\": [\r\n\t            {\r\n\t              \"Amount\": 0.00,\r\n\t              \"Code\": \"string\",\r\n\t              \"Type\": \"string\"\r\n\t            }\r\n\t          ],\r\n\t          \"ProductKey\": \"Product123\",\r\n\t          \"ProductQuantity\": 2,\r\n\t          \"ProductUnitPrice\": 19.99,\r\n\t          \"CITB\": \"CITB\"\r\n\t        }],\r\n\t        \"ShipmentKey\": \"1\",\r\n\t        \"ShipmentStatus\": \"SentToFulfillment\",\r\n\t        \"Shipping\": 0.00,\r\n\t        \"ShippingService\": \"FEX\",\r\n\t        \"ShipTo\": {\r\n\t           \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t            \"City\": \"Boulder\",\r\n\t            \"Company\": \"Sovos\",\r\n\t            \"Country\": \"US\",\r\n\t            \"County\": \"Boulder\",\r\n\t            \"Email\": \"example@sovos.com\",\r\n\t            \"Fax\": \"555-555-5555\",\r\n\t            \"FirstName\": \"Test First Name\",\r\n\t            \"LastName\": \"Test Last Name\",\r\n\t            \"Phone\": \"555-555-5555\",\r\n\t            \"State\": \"CO\",\r\n\t            \"Street1\": \"2465 Central Ave\",\r\n\t            \"Street2\": \"Ste 110\",\r\n\t            \"Zip1\": \"80301\",\r\n\t            \"Zip2\": \"5728\"\r\n\t         },\r\n\t        \"SpecialInstructions\": \"Test Instructions\"\r\n\t      }\r\n\t    ],\r\n\t    \"Tags\": [\r\n\t      {\r\n\t        \"Name\": \"Test Tag\"\r\n\t      }\r\n\t    ]\r\n\t  },\r\n\t  \"AddressOption\": {\r\n\t    \"IgnoreStreetLevelErrors\": false,\r\n\t    \"RejectIfAddressSuggested\": true\r\n\t  },\r\n\t  \"PersistOption\": \"Null\"\r\n\t}",
                "requestBody": {
                    "description": "The sales order to Persist",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostSalesOrderResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/check-compliance": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Checks the compliance and tax due of a sales order that will be committed at a later time.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/check-compliance\r\n\t{\r\n\t  \"SalesOrder\": {\r\n\t    \"BillTo\": {\r\n\t      \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t      \"City\": \"Boulder\",\r\n\t      \"Company\": \"Sovos\",\r\n\t      \"Country\": \"US\",\r\n\t      \"County\": \"Boulder\",\r\n\t      \"Email\": \"example@sovos.com\",\r\n\t      \"Fax\": \"555-555-5555\",\r\n\t      \"FirstName\": \"Test First Name\",\r\n\t      \"LastName\": \"Test Last Name\",\r\n\t      \"Phone\": \"555-555-5555\",\r\n\t      \"State\": \"CO\",\r\n\t      \"Street1\": \"2465 Central Ave\",\r\n\t      \"Street2\": \"Ste 110\",\r\n\t      \"Zip1\": \"80301\",\r\n\t      \"Zip2\": \"5728\"\r\n\t    },\r\n\t    \"CustomerKey\": \"Custom123\",\r\n\t    \"Discounts\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"Code\": \"string\",\r\n\t        \"Type\": \"string\"\r\n\t      }\r\n\t    ],\r\n\t    \"FulfillmentType\": \"Daily\",\r\n\t    \"OrderType\": \"Internet\",\r\n\t    \"Payments\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"SubType\": \"VISA\",\r\n\t        \"TransactionID\": \"string\",\r\n\t        \"Type\": \"CreditCard\"\r\n\t      }\r\n\t    ],\r\n\t    \"PurchaseDate\": \"2020-11-01T00:00:00Z\",\r\n\t    \"SalesOrderKey\": \"Order123\",\r\n\t    \"SalesTaxCollected\": 0.00,\r\n\t    \"Shipments\": [\r\n\t      {\r\n\t        \"Discounts\": [\r\n\t          {\r\n\t            \"Amount\": 0.00,\r\n\t            \"Code\": \"string\",\r\n\t            \"Type\": \"string\"\r\n\t          }\r\n\t        ],\r\n\t        \"FulfillmentAccount\": \"Account123\",\r\n\t        \"FulfillmentHouse\": \"WineShipping\",\r\n\t        \"FulfillmentExceptionReason\": \"Test Exception Reason\",\r\n\t        \"FulfillmentExceptionType\": \"Test Exception Type\",\r\n\t        \"GiftNote\": \"Happy Birthday\",\r\n\t        \"Handling\": 0.00,\r\n\t        \"LicenseRelationship\": \"SupplierToConsumer\",\r\n\t        \"Packages\": [\r\n\t          {\r\n\t            \"TrackingNumber\": \"ABC123456789\"\r\n\t          }\r\n\t        ],\r\n\t        \"ShipDate\": \"2020-11-01T00:00:00Z\",\r\n\t        \"ShipmentItems\": [{\r\n\t          \"BrandKey\": \"Brand123\",\r\n\t          \"Discounts\": [\r\n\t            {\r\n\t              \"Amount\": 0.00,\r\n\t              \"Code\": \"string\",\r\n\t              \"Type\": \"string\"\r\n\t            }\r\n\t          ],\r\n\t          \"ProductKey\": \"Product123\",\r\n\t          \"ProductQuantity\": 2,\r\n\t          \"ProductUnitPrice\": 19.99,\r\n\t          \"CITB\": \"CITB\"\r\n\t        }],\r\n\t        \"ShipmentKey\": \"1\",\r\n\t        \"ShipmentStatus\": \"SentToFulfillment\",\r\n\t        \"Shipping\": 0.00,\r\n\t        \"ShippingService\": \"FEX\",\r\n\t        \"ShipTo\": {\r\n\t           \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t            \"City\": \"Boulder\",\r\n\t            \"Company\": \"Sovos\",\r\n\t            \"Country\": \"US\",\r\n\t            \"County\": \"Boulder\",\r\n\t            \"Email\": \"example@sovos.com\",\r\n\t            \"Fax\": \"555-555-5555\",\r\n\t            \"FirstName\": \"Test First Name\",\r\n\t            \"LastName\": \"Test Last Name\",\r\n\t            \"Phone\": \"555-555-5555\",\r\n\t            \"State\": \"CO\",\r\n\t            \"Street1\": \"2465 Central Ave\",\r\n\t            \"Street2\": \"Ste 110\",\r\n\t            \"Zip1\": \"80301\",\r\n\t            \"Zip2\": \"5728\"\r\n\t         },\r\n\t        \"SpecialInstructions\": \"Test Instructions\"\r\n\t      }\r\n\t    ],\r\n\t    \"Tags\": [\r\n\t      {\r\n\t        \"Name\": \"Test Tag\"\r\n\t      }\r\n\t    ]\r\n\t  },\r\n\t  \"AddressOption\": {\r\n\t    \"IgnoreStreetLevelErrors\": false,\r\n\t    \"RejectIfAddressSuggested\": true\r\n\t  },\r\n\t  \"PersistOption\": \"Null\"\r\n\t}",
                "requestBody": {
                    "description": "The sales order to check compliance",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.CheckComplianceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/check-commit": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Checks the compliance and tax due of a sales order and saves the order to the system.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/check-commit\r\n\t{\r\n\t  \"CommitOption\": \"AllShipments\",\r\n\t  \"SalesOrder\": {\r\n\t    \"BillTo\": {\r\n\t      \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t      \"City\": \"Boulder\",\r\n\t      \"Company\": \"Sovos\",\r\n\t      \"Country\": \"US\",\r\n\t      \"County\": \"Boulder\",\r\n\t      \"Email\": \"example@sovos.com\",\r\n\t      \"Fax\": \"555-555-5555\",\r\n\t      \"FirstName\": \"Test First Name\",\r\n\t      \"LastName\": \"Test Last Name\",\r\n\t      \"Phone\": \"555-555-5555\",\r\n\t      \"State\": \"CO\",\r\n\t      \"Street1\": \"2465 Central Ave\",\r\n\t      \"Street2\": \"Ste 110\",\r\n\t      \"Zip1\": \"80301\",\r\n\t      \"Zip2\": \"5728\"\r\n\t    },\r\n\t    \"CustomerKey\": \"Custom123\",\r\n\t    \"Discounts\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"Code\": \"string\",\r\n\t        \"Type\": \"string\"\r\n\t      }\r\n\t    ],\r\n\t    \"FulfillmentType\": \"Daily\",\r\n\t    \"OrderType\": \"Internet\",\r\n\t    \"Payments\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"SubType\": \"VISA\",\r\n\t        \"TransactionID\": \"string\",\r\n\t        \"Type\": \"CreditCard\"\r\n\t      }\r\n\t    ],\r\n\t    \"PurchaseDate\": \"2020-11-01T00:00:00Z\",\r\n\t    \"SalesOrderKey\": \"Order123\",\r\n\t    \"SalesTaxCollected\": 0.00,\r\n\t    \"Shipments\": [\r\n\t      {\r\n\t        \"Discounts\": [\r\n\t          {\r\n\t            \"Amount\": 0.00,\r\n\t            \"Code\": \"string\",\r\n\t            \"Type\": \"string\"\r\n\t          }\r\n\t        ],\r\n\t        \"FulfillmentAccount\": \"Account123\",\r\n\t        \"FulfillmentHouse\": \"WineShipping\",\r\n\t        \"FulfillmentExceptionReason\": \"Test Exception Reason\",\r\n\t        \"FulfillmentExceptionType\": \"Test Exception Type\",\r\n\t        \"GiftNote\": \"Happy Birthday\",\r\n\t        \"Handling\": 0.00,\r\n\t        \"LicenseRelationship\": \"SupplierToConsumer\",\r\n\t        \"Packages\": [\r\n\t          {\r\n\t            \"TrackingNumber\": \"ABC123456789\"\r\n\t          }\r\n\t        ],\r\n\t        \"ShipDate\": \"2020-11-01T00:00:00Z\",\r\n\t        \"ShipmentItems\": [{\r\n\t          \"BrandKey\": \"Brand123\",\r\n\t          \"Discounts\": [\r\n\t            {\r\n\t              \"Amount\": 0.00,\r\n\t              \"Code\": \"string\",\r\n\t              \"Type\": \"string\"\r\n\t            }\r\n\t          ],\r\n\t          \"ProductKey\": \"Product123\",\r\n\t          \"ProductQuantity\": 2,\r\n\t          \"ProductUnitPrice\": 19.99,\r\n\t          \"CITB\": \"CITB\"\r\n\t        }],\r\n\t        \"ShipmentKey\": \"1\",\r\n\t        \"ShipmentStatus\": \"SentToFulfillment\",\r\n\t        \"Shipping\": 0.00,\r\n\t        \"ShippingService\": \"FEX\",\r\n\t        \"ShipTo\": {\r\n\t           \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t            \"City\": \"Boulder\",\r\n\t            \"Company\": \"Sovos\",\r\n\t            \"Country\": \"US\",\r\n\t            \"County\": \"Boulder\",\r\n\t            \"Email\": \"example@sovos.com\",\r\n\t            \"Fax\": \"555-555-5555\",\r\n\t            \"FirstName\": \"Test First Name\",\r\n\t            \"LastName\": \"Test Last Name\",\r\n\t            \"Phone\": \"555-555-5555\",\r\n\t            \"State\": \"CO\",\r\n\t            \"Street1\": \"2465 Central Ave\",\r\n\t            \"Street2\": \"Ste 110\",\r\n\t            \"Zip1\": \"80301\",\r\n\t            \"Zip2\": \"5728\"\r\n\t         },\r\n\t        \"SpecialInstructions\": \"Test Instructions\"\r\n\t      }\r\n\t    ],\r\n\t    \"Tags\": [\r\n\t      {\r\n\t        \"Name\": \"Test Tag\"\r\n\t      }\r\n\t    ]\r\n\t  },\r\n\t  \"AddressOption\": {\r\n\t    \"IgnoreStreetLevelErrors\": false,\r\n\t    \"RejectIfAddressSuggested\": true\r\n\t  },\r\n\t  \"PersistOption\": \"Null\"\r\n\t}",
                "requestBody": {
                    "description": "The sales order to check compliance",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CheckAndCommitSalesOrder"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CheckAndCommitSalesOrder"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CheckAndCommitSalesOrder"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CheckAndCommitSalesOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.CheckComplianceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/commit": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Saves a sales order to the system that has previously been checked for compliance.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/commit\r\n\t{\r\n\t  \"CommitOption\": \"AllShipments\",\r\n\t  \"Payments\": [\r\n\t    {\r\n\t      \"Amount\": 0.00,\r\n\t      \"SubType\": \"VISA\",\r\n\t      \"TransactionID\": \"string\",\r\n\t      \"Type\": \"CreditCard\"\r\n\t    }\r\n\t  ],\r\n\t  \"SalesTaxCollected\": 0.00,\r\n\t  \"SalesOrderKey\": \"Order123\"\r\n\t}",
                "requestBody": {
                    "description": "The sales order to commit",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CommitSalesOrder"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CommitSalesOrder"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CommitSalesOrder"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CommitSalesOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.CommitResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}/tracking": {
            "get": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Retrieves all tracking numbers by salesOrderKey or tracking numbers for a specified (optional) shipment key.",
                "description": "Sample request:\r\n            \r\n\tGET /api/v1/salesOrders/Order123/tracking\r\n            \r\nIf a specific shipment tracking is required.\r\n            \r\n    GET /api/v1/salesOrders/Order123/tracking?shipmentKey=Ship1",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    },
                    {
                        "name": "shipmentKey",
                        "in": "query",
                        "description": "The Shipment key",
                        "schema": {
                            "title": "String[]",
                            "type": "array",
                            "items": {
                                "title": "String",
                                "type": "string"
                            },
                            "description": "The Shipment key",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetTrackingByKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Adds a new Tracking",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/Order123/tracking\r\n\t{\r\n\t    \"ShipmentKey\": \"Ship1\",\r\n\t    \"TrackingNumbers\": [\r\n\t    \t\"ABC123456789\"\r\n\t    ]\r\n\t}",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    }
                ],
                "requestBody": {
                    "description": "The new Trackings",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostTrackingResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Voids all Trackings for a sales order",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/salesOrders/Order123/tracking",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteTrackingResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}/shipment/{shipmentKey}/tracking": {
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Voids all Trackings for a specific shipment in a sales order",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/salesOrders/Order123/shipment/Ship1/tracking",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    },
                    {
                        "name": "shipmentKey",
                        "in": "path",
                        "description": "The shipment number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The shipment number",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteTrackingResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}/tracking/{trackingNumber}": {
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Voids a specific tracking number for all shipments in a sales order",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/salesOrders/Order123/tracking/ABC123456789",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    },
                    {
                        "name": "trackingNumber",
                        "in": "path",
                        "description": "The tracking number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The tracking number",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteTrackingResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}/shipment/{shipmentKey}/tracking/{trackingNumber}": {
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Voids a specific tracking number for a shipment in a sales order.",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/salesOrders/Order123/shipment/Ship1/tracking/ABC123456789",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "The sales order number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The sales order number",
                            "nullable": false
                        }
                    },
                    {
                        "name": "shipmentKey",
                        "in": "path",
                        "description": "The shipment number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The shipment number",
                            "nullable": false
                        }
                    },
                    {
                        "name": "trackingNumber",
                        "in": "path",
                        "description": "The tracking number",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "The tracking number",
                            "nullable": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteTrackingResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/shipments/status": {
            "put": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Updates shipment status",
                "description": "Sample request:\r\n            \r\n    PUT /api/v1/salesOrders/shipments/status\r\n    {\r\n\t    \"salesOrderKey\": \"109807833\",\r\n        \"shipmentKey\": \"2012351B\",\r\n        \"shipmentStatus\": \"Delivered\"\r\n\t}",
                "requestBody": {
                    "description": "Request body containing SalesOrderKey, ShipmentKey and new ShipmentStatus",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.UpdateShipmentStatusInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.UpdateShipmentStatusInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.UpdateShipmentStatusInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.UpdateShipmentStatusInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteSalesOrderResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/quote": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Checks the compliance and tax due of a sales order without saving results for future use.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/quote\r\n\t{\r\n\t  \"SalesOrder\": {\r\n\t    \"BillTo\": {\r\n\t      \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t      \"City\": \"Boulder\",\r\n\t      \"Company\": \"Sovos\",\r\n\t      \"Country\": \"US\",\r\n\t      \"County\": \"Boulder\",\r\n\t      \"Email\": \"example@sovos.com\",\r\n\t      \"Fax\": \"555-555-5555\",\r\n\t      \"FirstName\": \"Test First Name\",\r\n\t      \"LastName\": \"Test Last Name\",\r\n\t      \"Phone\": \"555-555-5555\",\r\n\t      \"State\": \"CO\",\r\n\t      \"Street1\": \"2465 Central Ave\",\r\n\t      \"Street2\": \"Ste 110\",\r\n\t      \"Zip1\": \"80301\",\r\n\t      \"Zip2\": \"5728\"\r\n\t    },\r\n\t    \"CustomerKey\": \"Custom123\",\r\n\t    \"Discounts\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"Code\": \"string\",\r\n\t        \"Type\": \"string\"\r\n\t      }\r\n\t    ],\r\n\t    \"FulfillmentType\": \"Daily\",\r\n\t    \"OrderType\": \"Internet\",\r\n\t    \"Payments\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"SubType\": \"VISA\",\r\n\t        \"TransactionID\": \"string\",\r\n\t        \"Type\": \"CreditCard\"\r\n\t      }\r\n\t    ],\r\n\t    \"PurchaseDate\": \"2020-11-01T00:00:00Z\",\r\n\t    \"SalesOrderKey\": \"Order123\",\r\n\t    \"SalesTaxCollected\": 0.00,\r\n\t    \"Shipments\": [\r\n\t      {\r\n\t        \"Discounts\": [\r\n\t          {\r\n\t            \"Amount\": 0.00,\r\n\t            \"Code\": \"string\",\r\n\t            \"Type\": \"string\"\r\n\t          }\r\n\t        ],\r\n\t        \"FulfillmentAccount\": \"Account123\",\r\n\t        \"FulfillmentHouse\": \"WineShipping\",\r\n\t        \"FulfillmentExceptionReason\": \"Test Exception Reason\",\r\n\t        \"FulfillmentExceptionType\": \"Test Exception Type\",\r\n\t        \"GiftNote\": \"Happy Birthday\",\r\n\t        \"Handling\": 0.00,\r\n\t        \"LicenseRelationship\": \"SupplierToConsumer\",\r\n\t        \"Packages\": [\r\n\t          {\r\n\t            \"TrackingNumber\": \"ABC123456789\"\r\n\t          }\r\n\t        ],\r\n\t        \"ShipDate\": \"2020-11-01T00:00:00Z\",\r\n\t        \"ShipmentItems\": [{\r\n\t          \"BrandKey\": \"Brand123\",\r\n\t          \"Discounts\": [\r\n\t            {\r\n\t              \"Amount\": 0.00,\r\n\t              \"Code\": \"string\",\r\n\t              \"Type\": \"string\"\r\n\t            }\r\n\t          ],\r\n\t          \"ProductKey\": \"Product123\",\r\n\t          \"ProductQuantity\": 2,\r\n\t          \"ProductUnitPrice\": 19.99,\r\n\t          \"CITB\": \"CITB\"\r\n\t        }],\r\n\t        \"ShipmentKey\": \"1\",\r\n\t        \"ShipmentStatus\": \"SentToFulfillment\",\r\n\t        \"Shipping\": 0.00,\r\n\t        \"ShippingService\": \"FEX\",\r\n\t        \"ShipTo\": {\r\n\t           \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t            \"City\": \"Boulder\",\r\n\t            \"Company\": \"Sovos\",\r\n\t            \"Country\": \"US\",\r\n\t            \"County\": \"Boulder\",\r\n\t            \"Email\": \"example@sovos.com\",\r\n\t            \"Fax\": \"555-555-5555\",\r\n\t            \"FirstName\": \"Test First Name\",\r\n\t            \"LastName\": \"Test Last Name\",\r\n\t            \"Phone\": \"555-555-5555\",\r\n\t            \"State\": \"CO\",\r\n\t            \"Street1\": \"2465 Central Ave\",\r\n\t            \"Street2\": \"Ste 110\",\r\n\t            \"Zip1\": \"80301\",\r\n\t            \"Zip2\": \"5728\"\r\n\t         },\r\n\t        \"SpecialInstructions\": \"Test Instructions\"\r\n\t      }\r\n\t    ],\r\n\t    \"Tags\": [\r\n\t      {\r\n\t        \"Name\": \"Test Tag\"\r\n\t      }\r\n\t    ]\r\n\t  },\r\n\t  \"AddressOption\": {\r\n\t    \"IgnoreStreetLevelErrors\": false,\r\n\t    \"RejectIfAddressSuggested\": true\r\n\t  }\r\n\t}",
                "requestBody": {
                    "description": "The sales order to Quote",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.CheckComplianceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/quote/compliance": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Checks the compliance of a sales order without saving results for future use.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/quote/compliance\r\n\t{\r\n\t  \"SalesOrder\": {\r\n\t    \"BillTo\": {\r\n\t      \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t      \"City\": \"Boulder\",\r\n\t      \"Company\": \"Sovos\",\r\n\t      \"Country\": \"US\",\r\n\t      \"County\": \"Boulder\",\r\n\t      \"Email\": \"example@sovos.com\",\r\n\t      \"Fax\": \"555-555-5555\",\r\n\t      \"FirstName\": \"Test First Name\",\r\n\t      \"LastName\": \"Test Last Name\",\r\n\t      \"Phone\": \"555-555-5555\",\r\n\t      \"State\": \"CO\",\r\n\t      \"Street1\": \"2465 Central Ave\",\r\n\t      \"Street2\": \"Ste 110\",\r\n\t      \"Zip1\": \"80301\",\r\n\t      \"Zip2\": \"5728\"\r\n\t    },\r\n\t    \"CustomerKey\": \"Custom123\",\r\n\t    \"Discounts\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"Code\": \"string\",\r\n\t        \"Type\": \"string\"\r\n\t      }\r\n\t    ],\r\n\t    \"FulfillmentType\": \"Daily\",\r\n\t    \"OrderType\": \"Internet\",\r\n\t    \"Payments\": [\r\n\t      {\r\n\t        \"Amount\": 0.00,\r\n\t        \"SubType\": \"VISA\",\r\n\t        \"TransactionID\": \"string\",\r\n\t        \"Type\": \"CreditCard\"\r\n\t      }\r\n\t    ],\r\n\t    \"PurchaseDate\": \"2020-11-01T00:00:00Z\",\r\n\t    \"SalesOrderKey\": \"Order123\",\r\n\t    \"SalesTaxCollected\": 0.00,\r\n\t    \"Shipments\": [\r\n\t      {\r\n\t        \"Discounts\": [\r\n\t          {\r\n\t            \"Amount\": 0.00,\r\n\t            \"Code\": \"string\",\r\n\t            \"Type\": \"string\"\r\n\t          }\r\n\t        ],\r\n\t        \"FulfillmentAccount\": \"Account123\",\r\n\t        \"FulfillmentHouse\": \"WineShipping\",\r\n\t        \"FulfillmentExceptionReason\": \"Test Exception Reason\",\r\n\t        \"FulfillmentExceptionType\": \"Test Exception Type\",\r\n\t        \"GiftNote\": \"Happy Birthday\",\r\n\t        \"Handling\": 0.00,\r\n\t        \"LicenseRelationship\": \"SupplierToConsumer\",\r\n\t        \"Packages\": [\r\n\t          {\r\n\t            \"TrackingNumber\": \"ABC123456789\"\r\n\t          }\r\n\t        ],\r\n\t        \"ShipDate\": \"2020-11-01T00:00:00Z\",\r\n\t        \"ShipmentItems\": [{\r\n\t          \"BrandKey\": \"Brand123\",\r\n\t          \"Discounts\": [\r\n\t            {\r\n\t              \"Amount\": 0.00,\r\n\t              \"Code\": \"string\",\r\n\t              \"Type\": \"string\"\r\n\t            }\r\n\t          ],\r\n\t          \"ProductKey\": \"Product123\",\r\n\t          \"ProductQuantity\": 2,\r\n\t          \"ProductUnitPrice\": 19.99,\r\n\t          \"CITB\": \"CITB\"\r\n\t        }],\r\n\t        \"ShipmentKey\": \"1\",\r\n\t        \"ShipmentStatus\": \"SentToFulfillment\",\r\n\t        \"Shipping\": 0.00,\r\n\t        \"ShippingService\": \"FEX\",\r\n\t        \"ShipTo\": {\r\n\t           \"DateOfBirth\": \"1970-01-01T00:00:00Z\",\r\n\t            \"City\": \"Boulder\",\r\n\t            \"Company\": \"Sovos\",\r\n\t            \"Country\": \"US\",\r\n\t            \"County\": \"Boulder\",\r\n\t            \"Email\": \"example@sovos.com\",\r\n\t            \"Fax\": \"555-555-5555\",\r\n\t            \"FirstName\": \"Test First Name\",\r\n\t            \"LastName\": \"Test Last Name\",\r\n\t            \"Phone\": \"555-555-5555\",\r\n\t            \"State\": \"CO\",\r\n\t            \"Street1\": \"2465 Central Ave\",\r\n\t            \"Street2\": \"Ste 110\",\r\n\t            \"Zip1\": \"80301\",\r\n\t            \"Zip2\": \"5728\"\r\n\t         },\r\n\t        \"SpecialInstructions\": \"Test Instructions\"\r\n\t      }\r\n\t    ],\r\n\t    \"Tags\": [\r\n\t      {\r\n\t        \"Name\": \"Test Tag\"\r\n\t      }\r\n\t    ]\r\n\t  },\r\n\t  \"AddressOption\": {\r\n\t    \"IgnoreStreetLevelErrors\": false,\r\n\t    \"RejectIfAddressSuggested\": true\r\n\t  }\r\n\t}",
                "requestBody": {
                    "description": "The sales order to Quote",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.QuoteComplianceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/quote/sales-tax": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Returns the tax due for a sales order without saving results for future use.",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/salesOrders/quote/sales-tax\r\n\t{\r\n\t  \"ShipToAddress\": {\r\n\t\t\"City\":  \"Boulder\",\r\n\t    \"State\": \"CO\",\r\n\t    \"Street1\": \"2465 Central Ave\",\r\n\t    \"Street2\": \"Ste 110\",\r\n\t    \"Zip1\": \"80301\",\r\n\t    \"Zip2\": \"5728\"\r\n\t  },\r\n\t  \"EffectiveDate\": \"2020-11-01T00:00:00Z\",\r\n\t  \"TaxSaleType\": \"onsite\",\r\n\t  \"ShippingAndHandlingCollected\": 0.00,\r\n\t  \"OrderItems\": [\r\n\t    {\r\n\t      \"BrandKey\": \"Brand123\",\r\n\t      \"ProductKey\": \"Product123\",\r\n\t      \"ProductQuantity\": 2,\r\n\t      \"ProductUnitPrice\": 19.99\r\n\t    }\r\n\t  ]\r\n\t}",
                "requestBody": {
                    "description": "The sales order to Quote the tax",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteTaxForSalesOrder"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteTaxForSalesOrder"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteTaxForSalesOrder"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteTaxForSalesOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.QuoteTaxSalesOrderResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/quote/sales-tax-rate": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Returns the tax rate for a sales order based on the Address.",
                "description": "Sample request:\r\n\r\n\tPOST /api/v1/salesOrders/quote/sales-tax-rate\r\n\t{\r\n\t  \"ShipToAddress\": {\r\n\t\t\"City\":  \"Boulder\",\r\n\t    \"State\": \"CO\",\r\n\t    \"Street1\": \"2465 Central Ave\",\r\n\t    \"Street2\": \"Ste 110\",\r\n\t    \"Zip1\": \"80301\",\r\n\t    \"Zip2\": \"5728\"\r\n\t  },\r\n\t  \"EffectiveDate\": \"2020-11-01T00:00:00Z\",\r\n\t  \"TaxSaleType\": \"onsite\",\r\n\t  \"LicenseRelationship\" :\"\"\r\n\t}",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRatesByAddress"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRatesByAddress"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRatesByAddress"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRatesByAddress"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TaxRateSalesOrderByAddressResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}/hold-location": {
            "post": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Adds a new Hold Location (previously PickUp location) to a shipment in a sales order.",
                "description": "Sample request:\r\n\r\n    POST /api/v1/salesOrders/ORDER123/hold-location\r\n    {\r\n        \"shipmentKey\": \"Ship1\",\r\n        \"address\": {\r\n            \"city\": \"Boulder\",\r\n            \"company\": \"Sovos\",\r\n            \"country\": \"US\",\r\n            \"county\": \"Boulder\",\r\n            \"email\": \"example@sovos.com\",\r\n            \"fax\": \"555-555-5555\",\r\n            \"firstName\": \"Example First Name\",\r\n            \"lastName\": \"Example Last Name\",\r\n            \"phone\": \"555-555-5555\",\r\n            \"state\": \"CO\",\r\n            \"street1\": \"2465 Central Ave\",\r\n            \"street2\": \"Ste 110\",\r\n            \"zip1\": \"80301\",\r\n            \"zip2\": \"5728\"\r\n        }\r\n    }",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "Mandatory: Sales order identifier.",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Mandatory: Sales order identifier."
                        }
                    }
                ],
                "requestBody": {
                    "description": "New hold location details.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.AddUpdateHoldLocation"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.AddUpdateHoldLocation"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.AddUpdateHoldLocation"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.AddUpdateHoldLocation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostHoldLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Deletes all hold locations from a Sales Order",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/salesOrders/ORDER123/hold-location",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "Mandatory: Sales order identifier.",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Mandatory: Sales order identifier."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteHoldLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/salesOrders/{salesOrderKey}/shipment/{shipmentKey}/hold-location": {
            "delete": {
                "tags": [
                    "SalesOrders"
                ],
                "summary": "Deletes one occurrence of a hold location from a Sales Order by shipment key",
                "description": "Sample request:\r\n            \r\n\tDELETE /api/v1/salesOrders/ORDER123/shipment/SHIP1/hold-location",
                "parameters": [
                    {
                        "name": "salesOrderKey",
                        "in": "path",
                        "description": "Mandatory: Sales order identifier.",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Mandatory: Sales order identifier."
                        }
                    },
                    {
                        "name": "shipmentKey",
                        "in": "path",
                        "description": "Mandatory: shipment identifier.",
                        "required": true,
                        "schema": {
                            "title": "String",
                            "type": "string",
                            "description": "Mandatory: shipment identifier."
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteHoldLocationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/wholesaleInvoices": {
            "post": {
                "tags": [
                    "WholesaleInvoices"
                ],
                "summary": "Commits a new Wholesale Invoice to the system",
                "description": "Sample request:\r\n            \r\n\tPOST /api/v1/wholesaleInvoices\r\n\t{  \r\n\t    \"PersistOption\": \"OverrideExisting\",\r\n\t    \"Order\": {\r\n\t        \"BillingCustomerKey\": \"Billing123\",\r\n\t        \"ExternalSalesOrderKey\": \"External123\",\r\n\t        \"OrderNumber\": \"Order123\",\r\n\t        \"OrderReserved\": \"Order123\",\r\n\t        \"ReferenceNumber\": \"Reference123\",\r\n\t        \"RefundedOrderReference\": \"RefundedOrder123\",\r\n\t        \"Shipments\": [\r\n\t        {\r\n\t            \"DefaultWarehouse\": \"WineShipping\",\r\n\t            \"Freight\": 0.00,\r\n\t            \"ShipDate\": \"2020-11-01T00:00:00Z\",\r\n\t            \"ShipmentItems\": [\r\n\t            {\r\n\t                \"BrandKey\": \"Brand123\",\r\n\t                \"FobPointKey\": \"FOB\",\r\n\t                \"ItemReserved\": \"ItemReserved\",\r\n\t                \"ProductKey\": \"Product123\",\r\n\t                \"Quantity\": 1,\r\n\t                \"QuantityType\": \"CASE\",\r\n\t                \"UnitPrice\": 19.99\r\n\t            }\r\n\t            ],\r\n\t            \"ShipmentKey\": \"1\",\r\n\t            \"ShipmentReserved\": \"ShipmentReserved\",\r\n\t            \"ShippingCustomerKey\": \"Shipping123\",\r\n\t            \"ShippingService\": \"FEX\"\r\n\t        }\r\n\t        ],\r\n\t        \"Tags\": [\r\n\t        {\r\n\t            \"Name\": \"Test Tag\"\r\n\t        }\r\n\t        ],\r\n\t        \"TransactionDate\": \"2020-11-01T00:00:00Z\",\r\n\t        \"TaxCollected\": 0.00\r\n\t    }\r\n\t}",
                "requestBody": {
                    "description": "The new order",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.PostInvoiceInput"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.PostInvoiceInput"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.PostInvoiceInput"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.PostInvoiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostWholesaleInvoiceResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderBadRequestResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ShipCompliantRestAPI.Domains.Addresses.Entities.Address": {
                "title": "Address",
                "required": [
                    "city",
                    "state",
                    "street1",
                    "zip1"
                ],
                "type": "object",
                "properties": {
                    "firstName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "dateOfBirth": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "city": {
                        "title": "String",
                        "type": "string"
                    },
                    "company": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "title": "String",
                        "type": "string"
                    },
                    "street1": {
                        "title": "String",
                        "type": "string"
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip1": {
                        "title": "String",
                        "type": "string"
                    },
                    "zip2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Addresses.Entities.AddressBase": {
                "title": "AddressBase",
                "required": [
                    "address"
                ],
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Addresses.Entities.Address"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressDetails": {
                "title": "AddressDetails",
                "type": "object",
                "properties": {
                    "cityAbbreviation": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "congressionalDistrict": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "countyFips": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "timeZone": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "timeZoneCode": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressParts": {
                "title": "AddressParts",
                "type": "object",
                "properties": {
                    "company": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "mailBoxName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "mailBoxNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "postDirection": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "preDirection": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "streetName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "streetSuffix": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "suiteName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "suiteNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressSuggestion": {
                "title": "AddressSuggestion",
                "type": "object",
                "properties": {
                    "city": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "details": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressDetails"
                    },
                    "parts": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressParts"
                    },
                    "state": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Addresses.Entities.ValidateAddressResult": {
                "title": "ValidateAddressResult",
                "type": "object",
                "properties": {
                    "addressStatus": {
                        "title": "AddressStatus",
                        "enum": [
                            "Null",
                            "AddressOutOfRange",
                            "AddressSuggested",
                            "ComponentMismatch",
                            "MultipleMatches",
                            "NonDeliverableAddress",
                            "NoStreetData",
                            "UnknownStreet",
                            "Validated",
                            "ZipCodeDoesNotExist",
                            "ZipCodeDoesNotMatchCityState"
                        ],
                        "type": "string"
                    },
                    "addressSuggestion": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressSuggestion"
                    },
                    "isBusinessAddress": {
                        "title": "Boolean",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ValidateAddressResponse": {
                "title": "ValidateAddressResponse",
                "type": "object",
                "properties": {
                    "validateAddressResult": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Addresses.Entities.ValidateAddressResult"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.AddressBadRequestResponseError": {
                "title": "AddressBadRequestResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Address"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ValidateAddressBadRequestResponse": {
                "title": "ValidateAddressBadRequestResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.AddressBadRequestResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Brand.Entities.BrandOwner": {
                "title": "BrandOwner",
                "type": "object",
                "properties": {
                    "city": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Brand.Entities.Brand": {
                "title": "Brand",
                "required": [
                    "name",
                    "thisBrandIsBottledByAThirdParty",
                    "thisBrandIsProducedByAThirdParty",
                    "thisBrandOperatesUnderATradeName",
                    "thisBrandWasAcquiredFromAThirdParty"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "ttbBrandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "title": "String",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.BrandOwner"
                    },
                    "thisBrandIsBottledByAThirdParty": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    },
                    "thisBrandIsProducedByAThirdParty": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    },
                    "thisBrandOperatesUnderATradeName": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    },
                    "thisBrandWasAcquiredFromAThirdParty": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetBrandSuccessResponse": {
                "title": "GetBrandSuccessResponse",
                "type": "object",
                "properties": {
                    "brand": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.Brand"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandNotFoundResponseError": {
                "title": "BrandNotFoundResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Brand"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandNotFoundResponse": {
                "title": "BrandNotFoundResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandNotFoundResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PutBrandResponse": {
                "title": "PutBrandResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandBadRequestResponseError": {
                "title": "BrandBadRequestResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Brand"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandBadRequestResponse": {
                "title": "BrandBadRequestResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.BrandBadRequestResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Brand.Entities.PostBrand": {
                "title": "PostBrand",
                "required": [
                    "key",
                    "name",
                    "thisBrandIsBottledByAThirdParty",
                    "thisBrandIsProducedByAThirdParty",
                    "thisBrandOperatesUnderATradeName",
                    "thisBrandWasAcquiredFromAThirdParty"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "title": "String",
                        "type": "string"
                    },
                    "ttbBrandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "title": "String",
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Brand.Entities.BrandOwner"
                    },
                    "thisBrandIsBottledByAThirdParty": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    },
                    "thisBrandIsProducedByAThirdParty": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    },
                    "thisBrandOperatesUnderATradeName": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    },
                    "thisBrandWasAcquiredFromAThirdParty": {
                        "title": "Nullable`1",
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostBrandResponse": {
                "title": "PostBrandResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours": {
                "title": "HoldLocationOpenHours",
                "type": "object",
                "properties": {
                    "operationalHoursType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "openingTime": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "closingTime": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationDetail": {
                "title": "HoldLocationDetail",
                "type": "object",
                "properties": {
                    "distanceMiles": {
                        "title": "Single",
                        "type": "number",
                        "format": "float"
                    },
                    "geographicCoordinates": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "mapUrl": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "isResidential": {
                        "title": "Boolean",
                        "type": "boolean"
                    },
                    "companyName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "stateCode": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "faxNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "mondayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    },
                    "tuesdayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    },
                    "wednesdayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    },
                    "thursdayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    },
                    "fridayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    },
                    "saturdayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    },
                    "sundayHours": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationOpenHours"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetHoldLocationResponse": {
                "title": "GetHoldLocationResponse",
                "type": "object",
                "properties": {
                    "locations": {
                        "title": "HoldLocationDetailCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.HoldLocation.Entities.HoldLocationDetail"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponseError": {
                "title": "HoldLocationBadRequestResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "HoldLocation"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponse": {
                "title": "HoldLocationBadRequestResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationBadRequestResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.LabelOutput": {
                "title": "LabelOutput",
                "type": "object",
                "properties": {
                    "cola": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "serialNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.ProductOutput": {
                "title": "ProductOutput",
                "type": "object",
                "properties": {
                    "age": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "defaultCase": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "defaultRetailUnitPrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "defaultWholesaleCasePrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "description": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "flavor": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "gtin": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "label": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.LabelOutput"
                    },
                    "marketplaceSKUs": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "title": "String",
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "nabca": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "percentAlcohol": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "productDistribution": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "scc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unimerc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unitPrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "upc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "varietal": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "vintage": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "volumeAmount": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "volumeUnit": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "containerType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "containersPerSellingUnit": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "brandName": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "brandDescription": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetProductSuccessResponse": {
                "title": "GetProductSuccessResponse",
                "type": "object",
                "properties": {
                    "product": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ProductOutput"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponseError": {
                "title": "ProductBadRequestResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Product"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponse": {
                "title": "ProductBadRequestResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductBadRequestResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductNotFoundResponseError": {
                "title": "ProductNotFoundResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Product"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductNotFoundResponse": {
                "title": "ProductNotFoundResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.ProductNotFoundResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteProductResponse": {
                "title": "DeleteProductResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.ProductInput": {
                "title": "ProductInput",
                "required": [
                    "description",
                    "productType"
                ],
                "type": "object",
                "properties": {
                    "age": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "bottleSizeML": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "defaultCase": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "defaultRetailUnitPrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "defaultWholesaleCasePrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "description": {
                        "title": "String",
                        "type": "string"
                    },
                    "flavor": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "style": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "gtin": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "label": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "nabca": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "percentAlcohol": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "productDistribution": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "title": "String",
                        "type": "string"
                    },
                    "scc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unimerc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unitPrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "upc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "varietal": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "vintage": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "volumeAmount": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "volumeUnit": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "subBrand": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "containerType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "containersPerSellingUnit": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "shippingWeightInLbs": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PutProductResponse": {
                "title": "PutProductResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.PostProductInput": {
                "title": "PostProductInput",
                "required": [
                    "description",
                    "productKey",
                    "productType"
                ],
                "type": "object",
                "properties": {
                    "productKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "age": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "bottleSizeML": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "defaultCase": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "defaultRetailUnitPrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "defaultWholesaleCasePrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "description": {
                        "title": "String",
                        "type": "string"
                    },
                    "flavor": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "style": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "gtin": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "label": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "nabca": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "percentAlcohol": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "productDistribution": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productType": {
                        "title": "String",
                        "type": "string"
                    },
                    "scc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unimerc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unitPrice": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "upc": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "varietal": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "vintage": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "volumeAmount": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "volumeUnit": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "subBrand": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "containerType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "containersPerSellingUnit": {
                        "title": "Nullable`1",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "shippingWeightInLbs": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostProductResponse": {
                "title": "PostProductResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.Component": {
                "title": "Component",
                "required": [
                    "brandKey",
                    "productKey",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "productKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "brandKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "quantity": {
                        "title": "Int32",
                        "type": "integer",
                        "format": "int32"
                    },
                    "defaultPrice": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.KitInput": {
                "title": "KitInput",
                "required": [
                    "brandKey",
                    "components",
                    "description",
                    "distributionType",
                    "productKey",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "String",
                        "type": "string"
                    },
                    "brandKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "productKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "description": {
                        "title": "String",
                        "type": "string"
                    },
                    "totalWeight": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "components": {
                        "title": "Component[]",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.Component"
                        }
                    },
                    "distributionType": {
                        "title": "String",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.ComboComponent": {
                "title": "ComboComponent",
                "required": [
                    "brandKey",
                    "productKey",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "productKey": {
                        "title": "String",
                        "type": "string",
                        "description": "ProductKey field."
                    },
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "description": "BrandKey field."
                    },
                    "quantity": {
                        "title": "Int32",
                        "type": "integer",
                        "description": "Quantity field.",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Combo Component class."
            },
            "ShipCompliantRestAPI.Domains.Product.Entities.ComboInput": {
                "title": "ComboInput",
                "required": [
                    "brandKey",
                    "components",
                    "description",
                    "distributionType",
                    "productComboKey"
                ],
                "type": "object",
                "properties": {
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "description": "Brand Key field."
                    },
                    "productComboKey": {
                        "title": "String",
                        "type": "string",
                        "description": "ProductComboKey field."
                    },
                    "description": {
                        "title": "String",
                        "type": "string",
                        "description": "Description field."
                    },
                    "itemsPerCase": {
                        "title": "Int32",
                        "type": "integer",
                        "description": "Number of items per combo.",
                        "format": "int32"
                    },
                    "wholesaleCasePrice": {
                        "title": "Decimal",
                        "type": "number",
                        "description": "Wholesale Case Price field.",
                        "format": "double"
                    },
                    "totalWeight": {
                        "title": "Double",
                        "type": "number",
                        "description": "Total Weight field.",
                        "format": "double"
                    },
                    "nabca": {
                        "title": "String",
                        "type": "string",
                        "description": "NABCA field.",
                        "nullable": true
                    },
                    "scc": {
                        "title": "String",
                        "type": "string",
                        "description": "SCC field.",
                        "nullable": true
                    },
                    "unimerc": {
                        "title": "String",
                        "type": "string",
                        "description": "UNIMERC field.",
                        "nullable": true
                    },
                    "upc": {
                        "title": "String",
                        "type": "string",
                        "description": "UPC field.",
                        "nullable": true
                    },
                    "gtin": {
                        "title": "String",
                        "type": "string",
                        "description": "GTIN field.",
                        "nullable": true
                    },
                    "components": {
                        "title": "ComboComponent[]",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Product.Entities.ComboComponent"
                        },
                        "description": "Combo Components.ShipCompliantRestAPI.Domains.Product.Entities.ComboComponent"
                    },
                    "distributionType": {
                        "title": "String",
                        "type": "string",
                        "description": "Distribution Type Direct or Wholesale"
                    }
                },
                "additionalProperties": false,
                "description": "Contains the fields who can be include in the request to add a new combo."
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address": {
                "title": "Address",
                "required": [
                    "city",
                    "firstName",
                    "lastName",
                    "state",
                    "street1",
                    "zip1"
                ],
                "type": "object",
                "properties": {
                    "dateOfBirth": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "city": {
                        "title": "String",
                        "type": "string"
                    },
                    "company": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "title": "String",
                        "type": "string"
                    },
                    "lastName": {
                        "title": "String",
                        "type": "string"
                    },
                    "phone": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "title": "String",
                        "type": "string"
                    },
                    "street1": {
                        "title": "String",
                        "type": "string"
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip1": {
                        "title": "String",
                        "type": "string"
                    },
                    "zip2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderDiscount": {
                "title": "SalesOrderDiscount",
                "type": "object",
                "properties": {
                    "amount": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.PaymentOutput": {
                "title": "PaymentOutput",
                "type": "object",
                "properties": {
                    "amount": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "subType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "transactionID": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "PaymentTypes",
                        "enum": [
                            "Cash",
                            "Check",
                            "Creditcard",
                            "Giftcard",
                            "Giftcertificate",
                            "Invoice",
                            "Moneyorder",
                            "Other",
                            "Storeaccount",
                            "Travelerscheck"
                        ],
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentDiscount": {
                "title": "ShipmentDiscount",
                "type": "object",
                "properties": {
                    "amount": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.PackageOutput": {
                "title": "PackageOutput",
                "type": "object",
                "properties": {
                    "trackingNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "trackingStatus": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItemDiscount": {
                "title": "ShipmentItemDiscount",
                "type": "object",
                "properties": {
                    "amount": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItem": {
                "title": "ShipmentItem",
                "required": [
                    "productKey",
                    "productQuantity"
                ],
                "type": "object",
                "properties": {
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "discounts": {
                        "title": "ShipmentItemDiscountCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItemDiscount"
                        },
                        "nullable": true
                    },
                    "productKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "productQuantity": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "productUnitPrice": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "citb": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentOutput": {
                "title": "ShipmentOutput",
                "type": "object",
                "properties": {
                    "discounts": {
                        "title": "ShipmentDiscountCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentDiscount"
                        },
                        "nullable": true
                    },
                    "fulfillmentAccount": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentHouse": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentExceptionReason": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentExceptionType": {
                        "title": "FulfillmentExceptionTypes",
                        "enum": [
                            "Null",
                            "None",
                            "Inventory",
                            "NonCompliant",
                            "Other",
                            "Updated",
                            "Setup",
                            "Temperature",
                            "Voided"
                        ],
                        "type": "string"
                    },
                    "giftNote": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "handling": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "licenseRelationship": {
                        "title": "LicenseRelationshipTypes",
                        "enum": [
                            "Default",
                            "Pickup",
                            "RetailerToConsumer",
                            "RetailerToThreeTier",
                            "SupplierToConsumer",
                            "SupplierToThreeTier"
                        ],
                        "type": "string"
                    },
                    "packages": {
                        "title": "PackageOutputCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.PackageOutput"
                        },
                        "nullable": true
                    },
                    "shipDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "shipmentItems": {
                        "title": "ShipmentItemCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItem"
                        },
                        "nullable": true
                    },
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipmentStatus": {
                        "title": "ShipmentStatusTypes",
                        "enum": [
                            "Delivered",
                            "InProcess",
                            "Shipped",
                            "Voided",
                            "SentToFulfillment",
                            "PaymentAccepted"
                        ],
                        "type": "string"
                    },
                    "shipping": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "shippingService": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipTo": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address"
                    },
                    "specialInstructions": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.Tag": {
                "title": "Tag",
                "type": "object",
                "properties": {
                    "name": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderOutput": {
                "title": "SalesOrderOutput",
                "type": "object",
                "properties": {
                    "billTo": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address"
                    },
                    "customerKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "discounts": {
                        "title": "SalesOrderDiscountCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderDiscount"
                        },
                        "nullable": true
                    },
                    "fulfillmentType": {
                        "title": "FulfillmentType",
                        "enum": [
                            "Null",
                            "Club",
                            "Daily"
                        ],
                        "type": "string"
                    },
                    "orderType": {
                        "title": "OrderTypes",
                        "enum": [
                            "Club",
                            "Fax",
                            "InPerson",
                            "Internet",
                            "Mail",
                            "Phone"
                        ],
                        "type": "string"
                    },
                    "payments": {
                        "title": "PaymentOutputCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.PaymentOutput"
                        },
                        "nullable": true
                    },
                    "purchaseDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "salesOrderKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "salesTaxCollected": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "salesTaxDue": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "ShipmentOutputCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentOutput"
                        },
                        "nullable": true
                    },
                    "tags": {
                        "title": "TagCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Tag"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ComplianceDetailResponse": {
                "title": "ComplianceDetailResponse",
                "type": "object",
                "properties": {
                    "type": {
                        "title": "ComplianceDetailType",
                        "enum": [
                            "BrandNameNotRegistered",
                            "LabelNotRegistered",
                            "NextShipDate",
                            "VolumeOverLimit"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.CustomerAggregateVolumeLimitDetail": {
                "title": "CustomerAggregateVolumeLimitDetail",
                "type": "object",
                "properties": {
                    "customerType": {
                        "title": "CustomerType",
                        "enum": [
                            "Null",
                            "Household",
                            "Individual"
                        ],
                        "type": "string"
                    },
                    "timeFrameCount": {
                        "title": "Int32",
                        "type": "integer",
                        "format": "int32"
                    },
                    "timeFrameType": {
                        "title": "TimeFrameType",
                        "enum": [
                            "Calendar",
                            "Rolling"
                        ],
                        "type": "string"
                    },
                    "timeFrameUnit": {
                        "title": "TimeFrameUnit",
                        "enum": [
                            "Null",
                            "Minutes",
                            "Hours",
                            "Days",
                            "Weeks",
                            "Months",
                            "Years"
                        ],
                        "type": "string"
                    },
                    "unitOfMeasure": {
                        "title": "VolumeUnit",
                        "enum": [
                            "Null",
                            "Bottle",
                            "Case",
                            "Gallon",
                            "Liter",
                            "Milliliter",
                            "Ounce",
                            "Quart",
                            "Barrel"
                        ],
                        "type": "string"
                    },
                    "volumeCount": {
                        "title": "Int32",
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.PerShipmentVolumeLimitDetail": {
                "title": "PerShipmentVolumeLimitDetail",
                "type": "object",
                "properties": {
                    "volumeCount": {
                        "title": "Int32",
                        "type": "integer",
                        "format": "int32"
                    },
                    "volumeUnit": {
                        "title": "VolumeUnit",
                        "enum": [
                            "Null",
                            "Bottle",
                            "Case",
                            "Gallon",
                            "Liter",
                            "Milliliter",
                            "Ounce",
                            "Quart",
                            "Barrel"
                        ],
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.PerBottleVolumeLimitDetail": {
                "title": "PerBottleVolumeLimitDetail",
                "type": "object",
                "properties": {
                    "volumeCount": {
                        "title": "Int32",
                        "type": "integer",
                        "format": "int32"
                    },
                    "volumeUnit": {
                        "title": "VolumeUnit",
                        "enum": [
                            "Null",
                            "Bottle",
                            "Case",
                            "Gallon",
                            "Liter",
                            "Milliliter",
                            "Ounce",
                            "Quart",
                            "Barrel"
                        ],
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Responses.RuleComplianceResponse": {
                "title": "RuleComplianceResponse",
                "type": "object",
                "properties": {
                    "complianceDescription": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "complianceDetails": {
                        "title": "ComplianceDetailResponseCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ComplianceDetailResponse"
                        },
                        "nullable": true
                    },
                    "licenseRelationship": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "ruleDescription": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "ruleType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "supplier": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "complianceStatus": {
                        "title": "RuleComplianceStatus",
                        "enum": [
                            "Compliant",
                            "NotCompliant",
                            "Bypassed"
                        ],
                        "type": "string"
                    },
                    "customerAggregateVolumeLimitDetail": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.CustomerAggregateVolumeLimitDetail"
                    },
                    "perShipmentVolumeLimitDetail": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.PerShipmentVolumeLimitDetail"
                    },
                    "perBottleVolumeLimitDetail": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.PerBottleVolumeLimitDetail"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Responses.ShipmentComplianceResponse": {
                "title": "ShipmentComplianceResponse",
                "type": "object",
                "properties": {
                    "complianceStatus": {
                        "title": "RuleComplianceStatus",
                        "enum": [
                            "Compliant",
                            "NotCompliant",
                            "Bypassed"
                        ],
                        "type": "string"
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "rules": {
                        "title": "RuleComplianceResponseCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Responses.RuleComplianceResponse"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderComplianceResults": {
                "title": "SalesOrderComplianceResults",
                "type": "object",
                "properties": {
                    "complianceStatus": {
                        "title": "RuleComplianceStatus",
                        "enum": [
                            "Compliant",
                            "NotCompliant",
                            "Bypassed"
                        ],
                        "type": "string"
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "ShipmentComplianceResponseCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Responses.ShipmentComplianceResponse"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetSalesOrderSuccessResponse": {
                "title": "GetSalesOrderSuccessResponse",
                "type": "object",
                "properties": {
                    "salesOrder": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderOutput"
                    },
                    "complianceResults": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderComplianceResults"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponseError": {
                "title": "SalesOrderNotFoundResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "SalesOrder"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponse": {
                "title": "SalesOrderNotFoundResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderNotFoundResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteSalesOrderResponse": {
                "title": "DeleteSalesOrderResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.Payment": {
                "title": "Payment",
                "type": "object",
                "properties": {
                    "amount": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "subType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "transactionID": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.Package": {
                "title": "Package",
                "type": "object",
                "properties": {
                    "trackingNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.Shipment": {
                "title": "Shipment",
                "required": [
                    "licenseRelationship",
                    "shipDate",
                    "shipmentItems",
                    "shipmentStatus",
                    "shippingService",
                    "shipTo"
                ],
                "type": "object",
                "properties": {
                    "discounts": {
                        "title": "ShipmentDiscountCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentDiscount"
                        },
                        "nullable": true
                    },
                    "fulfillmentAccount": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentHouse": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentExceptionReason": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fulfillmentExceptionType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "giftNote": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "handling": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "licenseRelationship": {
                        "title": "String",
                        "type": "string"
                    },
                    "packages": {
                        "title": "PackageCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Package"
                        },
                        "nullable": true
                    },
                    "shipDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "shipmentItems": {
                        "title": "ShipmentItemCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItem"
                        }
                    },
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipmentStatus": {
                        "title": "String",
                        "type": "string"
                    },
                    "shipping": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "shippingService": {
                        "title": "String",
                        "type": "string"
                    },
                    "shipTo": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address"
                    },
                    "specialInstructions": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrder": {
                "title": "SalesOrder",
                "required": [
                    "billTo",
                    "customerKey",
                    "orderType",
                    "purchaseDate",
                    "salesOrderKey",
                    "shipments"
                ],
                "type": "object",
                "properties": {
                    "billTo": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address"
                    },
                    "customerKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "discounts": {
                        "title": "SalesOrderDiscountCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderDiscount"
                        },
                        "nullable": true
                    },
                    "fulfillmentType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "orderType": {
                        "title": "String",
                        "type": "string"
                    },
                    "payments": {
                        "title": "PaymentCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Payment"
                        },
                        "nullable": true
                    },
                    "purchaseDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "salesOrderKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "salesTaxCollected": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "shipments": {
                        "title": "ShipmentCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Shipment"
                        }
                    },
                    "tags": {
                        "title": "TagCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Tag"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressOption": {
                "title": "AddressOption",
                "type": "object",
                "properties": {
                    "ignoreStreetLevelErrors": {
                        "title": "Boolean",
                        "type": "boolean"
                    },
                    "rejectIfAddressSuggested": {
                        "title": "Boolean",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderBase": {
                "title": "SalesOrderBase",
                "required": [
                    "salesOrder"
                ],
                "type": "object",
                "properties": {
                    "salesOrder": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrder"
                    },
                    "addressOption": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressOption"
                    },
                    "persistOption": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostSalesOrderResponse": {
                "title": "PostSalesOrderResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Errors.ErrorData": {
                "title": "ErrorData",
                "type": "object",
                "properties": {
                    "addressSuggestion": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressSuggestion"
                    }
                },
                "additionalProperties": false,
                "description": "For Quote Salestax we need to suggest an Address with the Error Message"
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponseError": {
                "title": "SalesOrderAddressValidationResponseError",
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Errors.ErrorData"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "SalesOrder"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": true
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponse": {
                "title": "SalesOrderAddressValidationResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderAddressValidationResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false,
                "description": "SalesOrderAddressValidationResponse"
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.RetailDeliveryFees": {
                "title": "RetailDeliveryFees",
                "type": "object",
                "properties": {
                    "name": {
                        "title": "String",
                        "type": "string",
                        "description": "Name of the Fees require by State",
                        "nullable": true
                    },
                    "feeAmount": {
                        "title": "Decimal",
                        "type": "number",
                        "description": "Total amount that you pay for this Fee",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Fees that the states require e.g 'CO Retail Delivery Fee'"
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.FreightSalesTaxRate": {
                "title": "FreightSalesTaxRate",
                "type": "object",
                "properties": {
                    "salesTaxDue": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "salesTaxRate": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ProductSalesTaxRate": {
                "title": "ProductSalesTaxRate",
                "type": "object",
                "properties": {
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "salesTaxDue": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "salesTaxRate": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentSalesTaxRate": {
                "title": "ShipmentSalesTaxRate",
                "type": "object",
                "properties": {
                    "freightSalesTaxRate": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.FreightSalesTaxRate"
                    },
                    "productSalesTaxRates": {
                        "title": "ProductSalesTaxRateCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ProductSalesTaxRate"
                        },
                        "nullable": true
                    },
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRates": {
                "title": "SalesTaxRates",
                "type": "object",
                "properties": {
                    "recommendedSalesTaxDue": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "retailDeliveryFees": {
                        "title": "IList`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.RetailDeliveryFees"
                        },
                        "nullable": true
                    },
                    "shipmentSalesTaxRates": {
                        "title": "ShipmentSalesTaxRateCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentSalesTaxRate"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderComplianceTaxResponse": {
                "title": "SalesOrderComplianceTaxResponse",
                "type": "object",
                "properties": {
                    "salesTaxRates": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRates"
                    },
                    "complianceStatus": {
                        "title": "RuleComplianceStatus",
                        "enum": [
                            "Compliant",
                            "NotCompliant",
                            "Bypassed"
                        ],
                        "type": "string"
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "ShipmentComplianceResponseCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Responses.ShipmentComplianceResponse"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.CheckComplianceResponse": {
                "title": "CheckComplianceResponse",
                "type": "object",
                "properties": {
                    "salesOrder": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderComplianceTaxResponse"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.CheckAndCommitSalesOrder": {
                "title": "CheckAndCommitSalesOrder",
                "required": [
                    "salesOrder"
                ],
                "type": "object",
                "properties": {
                    "commitOption": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "salesOrder": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrder"
                    },
                    "addressOption": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressOption"
                    },
                    "persistOption": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.CommitSalesOrder": {
                "title": "CommitSalesOrder",
                "required": [
                    "commitOption",
                    "salesOrderKey"
                ],
                "type": "object",
                "properties": {
                    "commitOption": {
                        "title": "String",
                        "type": "string"
                    },
                    "payments": {
                        "title": "PaymentCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Payment"
                        },
                        "nullable": true
                    },
                    "salesTaxCollected": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "salesOrderKey": {
                        "title": "String",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Responses.ShipmentCommitResponse": {
                "title": "ShipmentCommitResponse",
                "type": "object",
                "properties": {
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "isCommitted": {
                        "title": "Boolean",
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.CommitResponse": {
                "title": "CommitResponse",
                "type": "object",
                "properties": {
                    "shipments": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Responses.ShipmentCommitResponse"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderBadRequestResponseError": {
                "title": "SalesOrderBadRequestResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "SalesOrder"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderBadRequestResponse": {
                "title": "SalesOrderBadRequestResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderBadRequestResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingOutput": {
                "title": "TrackingOutput",
                "type": "object",
                "properties": {
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "trackingNumbers": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "title": "String",
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.GetTrackingByKeyResponse": {
                "title": "GetTrackingByKeyResponse",
                "type": "object",
                "properties": {
                    "trackings": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingOutput"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponseError": {
                "title": "TrackingNotFoundResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Tracking"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponse": {
                "title": "TrackingNotFoundResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingNotFoundResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Tracking.Entities.TrackingInput": {
                "title": "TrackingInput",
                "required": [
                    "trackingNumbers"
                ],
                "type": "object",
                "properties": {
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "trackingNumbers": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "title": "String",
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostTrackingResponse": {
                "title": "PostTrackingResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingBadRequestResponseError": {
                "title": "TrackingBadRequestResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "Tracking"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingBadRequestResponse": {
                "title": "TrackingBadRequestResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TrackingBadRequestResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 400
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteTrackingResponse": {
                "title": "DeleteTrackingResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.UpdateShipmentStatusInput": {
                "title": "UpdateShipmentStatusInput",
                "required": [
                    "salesOrderKey",
                    "shipmentKey",
                    "shipmentStatus"
                ],
                "type": "object",
                "properties": {
                    "salesOrderKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "shipmentKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "shipmentStatus": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrder": {
                "title": "QuoteSalesOrder",
                "required": [
                    "billTo",
                    "customerKey",
                    "orderType",
                    "purchaseDate",
                    "shipments"
                ],
                "type": "object",
                "properties": {
                    "billTo": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address"
                    },
                    "customerKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "discounts": {
                        "title": "SalesOrderDiscountCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesOrderDiscount"
                        },
                        "nullable": true
                    },
                    "fulfillmentType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "orderType": {
                        "title": "String",
                        "type": "string"
                    },
                    "payments": {
                        "title": "PaymentCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Payment"
                        },
                        "nullable": true
                    },
                    "purchaseDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "salesOrderKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "salesTaxCollected": {
                        "title": "Decimal",
                        "type": "number",
                        "format": "double"
                    },
                    "shipments": {
                        "title": "ShipmentCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Shipment"
                        }
                    },
                    "tags": {
                        "title": "TagCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Tag"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrderInput": {
                "title": "QuoteSalesOrderInput",
                "type": "object",
                "properties": {
                    "salesOrder": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteSalesOrder"
                    },
                    "addressOption": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.AddressOption"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.QuoteComplianceResponse": {
                "title": "QuoteComplianceResponse",
                "type": "object",
                "properties": {
                    "complianceResults": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.SalesOrderComplianceResults"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateAddressInput": {
                "title": "TaxRateAddressInput",
                "required": [
                    "zip1"
                ],
                "type": "object",
                "properties": {
                    "city": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip1": {
                        "title": "String",
                        "type": "string"
                    },
                    "zip2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItemForTax": {
                "title": "ShipmentItemForTax",
                "required": [
                    "productKey",
                    "productQuantity"
                ],
                "type": "object",
                "properties": {
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "productQuantity": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "productUnitPrice": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.QuoteTaxForSalesOrder": {
                "title": "QuoteTaxForSalesOrder",
                "required": [
                    "orderItems",
                    "shipToAddress",
                    "taxSaleType"
                ],
                "type": "object",
                "properties": {
                    "shipToAddress": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateAddressInput"
                    },
                    "effectiveDate": {
                        "title": "Nullable`1",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "taxSaleType": {
                        "title": "String",
                        "type": "string"
                    },
                    "shippingAndHandlingCollected": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "orderItems": {
                        "title": "ShipmentItemTaxCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.ShipmentItemForTax"
                        }
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateAddressOutput": {
                "title": "TaxRateAddressOutput",
                "type": "object",
                "properties": {
                    "addressStatus": {
                        "title": "AddressStatus",
                        "enum": [
                            "Null",
                            "AddressOutOfRange",
                            "AddressSuggested",
                            "ComponentMismatch",
                            "MultipleMatches",
                            "NonDeliverableAddress",
                            "NoStreetData",
                            "UnknownStreet",
                            "Validated",
                            "ZipCodeDoesNotExist",
                            "ZipCodeDoesNotMatchCityState"
                        ],
                        "type": "string"
                    },
                    "city": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "county": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "state": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "street2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip1": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "zip2": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.QuoteTaxSalesOrderResponse": {
                "title": "QuoteTaxSalesOrderResponse",
                "type": "object",
                "properties": {
                    "processedAddress": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateAddressOutput"
                    },
                    "salesTaxDue": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.SalesTaxRatesByAddress": {
                "title": "SalesTaxRatesByAddress",
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateAddressInput"
                    },
                    "effectiveDate": {
                        "title": "Nullable`1",
                        "type": "string",
                        "description": "EffectiveDate",
                        "format": "date-time",
                        "nullable": true
                    },
                    "taxSaleType": {
                        "title": "TaxSaleType",
                        "enum": [
                            "Null",
                            "Offsite",
                            "Onsite"
                        ],
                        "type": "string",
                        "description": "TaxSaleType"
                    },
                    "licenseRelationship": {
                        "title": "String",
                        "type": "string",
                        "description": "LicenseRelationship",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Request send by Client"
            },
            "ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateOutput": {
                "title": "TaxRateOutput",
                "type": "object",
                "properties": {
                    "description": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "foodSalesTaxPercent": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "freightSalesTaxPercent": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "merchandiseSalesTaxPercent": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "wineSalesTaxPercent": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.TaxRateSalesOrderByAddressResponse": {
                "title": "TaxRateSalesOrderByAddressResponse",
                "type": "object",
                "properties": {
                    "processedAddress": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateAddressOutput"
                    },
                    "taxRates": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.TaxRateOutput"
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false,
                "description": "TaxRateSalesOrderByAddressResponse"
            },
            "ShipCompliantRestAPI.Domains.HoldLocation.Entities.AddUpdateHoldLocation": {
                "title": "AddUpdateHoldLocation",
                "required": [
                    "address"
                ],
                "type": "object",
                "properties": {
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.SalesOrder.Entities.Address"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostHoldLocationResponse": {
                "title": "PostHoldLocationResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationNotFoundResponseError": {
                "title": "HoldLocationNotFoundResponseError",
                "type": "object",
                "properties": {
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    },
                    "target": {
                        "title": "ErrorTarget",
                        "enum": [
                            "Null",
                            "Address",
                            "Age",
                            "Batch",
                            "Brand",
                            "Distributor",
                            "Product",
                            "SalesOrder",
                            "Shipment",
                            "Tax",
                            "SSO",
                            "License",
                            "Tracking",
                            "HoldLocation"
                        ],
                        "type": "string",
                        "default": "HoldLocation"
                    },
                    "code": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "key": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "message": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "title": "ErrorType",
                        "enum": [
                            "Authentication",
                            "Server",
                            "Validation",
                            "Request"
                        ],
                        "type": "string",
                        "default": "Validation"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationNotFoundResponse": {
                "title": "HoldLocationNotFoundResponse",
                "type": "object",
                "properties": {
                    "errors": {
                        "title": "List`1",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.HoldLocationNotFoundResponseError"
                        },
                        "nullable": true
                    },
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Failure"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 404
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.DeleteHoldLocationResponse": {
                "title": "DeleteHoldLocationResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Wholesale.Entities.ShipmentItem": {
                "title": "ShipmentItem",
                "required": [
                    "productKey",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "brandKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "fobPointKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "itemReserved": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "productKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "quantity": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "quantityType": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "unitPrice": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Wholesale.Entities.Shipment": {
                "title": "Shipment",
                "required": [
                    "shipDate",
                    "shipmentItems",
                    "shippingCustomerKey"
                ],
                "type": "object",
                "properties": {
                    "defaultWarehouse": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "freight": {
                        "title": "Double",
                        "type": "number",
                        "format": "double"
                    },
                    "shipDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "shipmentItems": {
                        "title": "ShipmentItemCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.ShipmentItem"
                        }
                    },
                    "shipmentKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipmentReserved": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shippingCustomerKey": {
                        "title": "String",
                        "type": "string"
                    },
                    "shippingService": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Wholesale.Entities.Tag": {
                "title": "Tag",
                "type": "object",
                "properties": {
                    "name": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Wholesale.Entities.Order": {
                "title": "Order",
                "required": [
                    "orderNumber",
                    "shipments",
                    "transactionDate"
                ],
                "type": "object",
                "properties": {
                    "billingCustomerKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "externalSalesOrderKey": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "orderNumber": {
                        "title": "String",
                        "type": "string"
                    },
                    "orderReserved": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "referenceNumber": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "refundedOrderReference": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "ShipmentCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.Shipment"
                        }
                    },
                    "tags": {
                        "title": "TagCollection",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.Tag"
                        },
                        "nullable": true
                    },
                    "transactionDate": {
                        "title": "DateTime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "taxCollected": {
                        "title": "Nullable`1",
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Domains.Wholesale.Entities.PostInvoiceInput": {
                "title": "PostInvoiceInput",
                "required": [
                    "order"
                ],
                "type": "object",
                "properties": {
                    "persistOption": {
                        "title": "String",
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "$ref": "#/components/schemas/ShipCompliantRestAPI.Domains.Wholesale.Entities.Order"
                    }
                },
                "additionalProperties": false
            },
            "ShipCompliantRestAPI.Middlewares.SwaggerResponseTypes.PostWholesaleInvoiceResponse": {
                "title": "PostWholesaleInvoiceResponse",
                "type": "object",
                "properties": {
                    "responseStatus": {
                        "title": "ResponseStatus",
                        "enum": [
                            "Failure",
                            "Success"
                        ],
                        "type": "string",
                        "default": "Success"
                    },
                    "statusCode": {
                        "title": "StatusCode",
                        "enum": [
                            200,
                            400,
                            401,
                            403,
                            404,
                            429,
                            500
                        ],
                        "type": "integer",
                        "default": 200
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "Basic": {
                "type": "http",
                "description": "Basic authorization added to authorization header",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "Basic": []
        }
    ]
}
